=== INPUT ===
Which is the closest video shop to my parent's house at postcode <blah>?

=== OUTPUT ===

=== QUERY PLAN ===
To add context to this conversation, I need to retrieve the closest video shop to the user's parent's house based on the provided postcode.

```
data = executor.get_from_database("SELECT id, addr1, city, zip FROM loc WHERE zip = '<blah>'")
if len(data) == 0:
  executor.output('No address found with postcode <blah>')
else:
  addr_id = data[0]['id']
  data = executor.get_from_database("SELECT id, address_id FROM franchise_unit WHERE address_id = " + str(addr_id))
  if len(data) == 0:
    executor.output('No video shop found near postcode <blah>')
  else:
    executor.output(f'Closest video shop is at store ID {data[0]["id"]} located at {data[0]["address_id"]}')
```
=== EXECUTION RESULT ===

Traceback (most recent call last):
  File "<string>", line 1, in <module>
  File "/Users/abhg/hasura/ai-engine/pacha/query_planner/query_planner.py", line 40, in get_from_database
    data = self.data_engine.execute_sql(sql)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/abhg/hasura/ai-engine/pacha/data_engine/data_engine.py", line 37, in execute_sql
    cursor.execute(f"SELECT json_agg(t) FROM ({sql.strip(";")}) AS t")
psycopg2.errors.UndefinedColumn: column "city" does not exist
LINE 1: SELECT json_agg(t) FROM (SELECT id, addr1, city, zip FROM lo...
                                                   ^


=== RETRY ===

=== QUERY PLAN ===
The error is due to the column "city" not existing in the "loc" table. The correct column name is "city_id". Here's the corrected script:

```
data = executor.get_from_database("SELECT id, addr1, city_id, zip FROM loc WHERE zip = '<blah>'")
if len(data) == 0:
  executor.output('No address found with postcode <blah>')
else:
  addr_id = data[0]['id']
  data = executor.get_from_database("SELECT id, address_id FROM franchise_unit WHERE address_id = " + str(addr_id))
  if len(data) == 0:
    executor.output('No video shop found near postcode <blah>')
  else:
    executor.output(f'Closest video shop is at store ID {data[0]["id"]} located at address ID {data[0]["address_id"]}')
```
=== EXECUTION RESULT ===
No address found with postcode <blah>
